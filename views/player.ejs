<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <title><%= video.title %> - Mini-Netflix</title>
  <link rel="stylesheet" href="/style.css" />
  <style>
    body {
      background-color: #141414;
      color: white;
      font-family: Arial, sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }

    header {
      background-color: #141414;
      padding: 10px 20px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      width: 100%;
      box-sizing: border-box;
    }

    header img {
      height: 40px;
    }

    header h1 {
      margin: 0;
      font-size: 24px;
      color: #e50914;
    }

    .home-button {
      background-color: #e50914;
      color: white;
      text-decoration: none;
      padding: 8px 12px;
      border-radius: 4px;
    }

    .home-button:hover {
      background-color: #b0060f;
    }

    h2 {
      margin-top: 20px;
    }

    .player-container {
      max-width: 800px;
      width: 100%;
      background: #1c1c1c;
      border-radius: 10px;
      overflow: hidden;
      box-shadow: 0 0 15px rgba(0,0,0,0.7);
    }

    video {
      width: 100%;
      display: block;
      background: black;
    }

    .controls {
      display: flex;
      align-items: center;
      padding: 10px;
      gap: 10px;
      background-color: #222;
    }

    .btn {
      background: none;
      border: none;
      color: white;
      font-size: 18px;
      cursor: pointer;
      user-select: none;
    }

    .btn:hover {
      color: #e50914;
    }

    .progress-container {
      flex: 1;
      height: 8px;
      background: #444;
      border-radius: 4px;
      cursor: pointer;
      position: relative;
    }

    .progress {
      height: 100%;
      background: #e50914;
      width: 0%;
      border-radius: 4px;
      transition: width 0.1s;
    }

    .time {
      font-size: 14px;
      width: 75px;
      text-align: center;
      user-select: none;
    }

    select {
      background: #222;
      color: white;
      border: none;
      padding: 4px 8px;
      border-radius: 5px;
      font-size: 14px;
      cursor: pointer;
    }

    @media (max-width: 600px) {
      .controls {
        flex-wrap: wrap;
      }
      .time {
        width: 60px;
      }
    }
  </style>
</head>
<body>
  
  <%- include('partials/header') %>

  <h2><%= video.title %></h2>

  <div class="player-container">
    <video id="video" src="/uploads/<%= video.filename %>" preload="metadata"></video>
    <div class="controls">
      <button id="playPauseBtn" class="btn" title="Play/Pause">‚ñ∂Ô∏è</button>
      <div class="progress-container" id="progressContainer">
        <div class="progress" id="progressBar"></div>
      </div>
      <div class="time" id="currentTime">0:00</div>
      <div class="time" id="duration">0:00</div>
      <button id="muteBtn" class="btn" title="Mute/Unmute">üîä</button>
      <select id="speedSelect" title="Vitesse de lecture">
        <option value="0.5">0.5x</option>
        <option value="1" selected>1x</option>
        <option value="1.5">1.5x</option>
        <option value="2">2x</option>
      </select>
      <button id="fullscreenBtn" class="btn" title="Plein √©cran">‚õ∂</button>
    </div>
  </div>

  <script>
    const video = document.getElementById('video');
    const playPauseBtn = document.getElementById('playPauseBtn');
    const progressContainer = document.getElementById('progressContainer');
    const progressBar = document.getElementById('progressBar');
    const currentTimeElem = document.getElementById('currentTime');
    const durationElem = document.getElementById('duration');
    const muteBtn = document.getElementById('muteBtn');
    const speedSelect = document.getElementById('speedSelect');
    const fullscreenBtn = document.getElementById('fullscreenBtn');

    function formatTime(time) {
      const minutes = Math.floor(time / 60);
      const seconds = Math.floor(time % 60).toString().padStart(2, '0');
      return `${minutes}:${seconds}`;
    }

    function updatePlayPauseBtn() {
      playPauseBtn.textContent = video.paused ? '‚ñ∂Ô∏è' : '‚è∏Ô∏è';
    }

    function updateProgress() {
      const percent = (video.currentTime / video.duration) * 100;
      progressBar.style.width = percent + '%';
      currentTimeElem.textContent = formatTime(video.currentTime);
      durationElem.textContent = formatTime(video.duration);
    }

    playPauseBtn.addEventListener('click', () => {
      if (video.paused) {
        video.play();
      } else {
        video.pause();
      }
      updatePlayPauseBtn();
    });

    video.addEventListener('timeupdate', updateProgress);
    video.addEventListener('play', updatePlayPauseBtn);
    video.addEventListener('pause', updatePlayPauseBtn);

    progressContainer.addEventListener('click', e => {
      const rect = progressContainer.getBoundingClientRect();
      const clickX = e.clientX - rect.left;
      const width = rect.width;
      const newTime = (clickX / width) * video.duration;
      video.currentTime = newTime;
    });

    muteBtn.addEventListener('click', () => {
      video.muted = !video.muted;
      muteBtn.textContent = video.muted ? 'üîá' : 'üîä';
    });

    speedSelect.addEventListener('change', () => {
      video.playbackRate = parseFloat(speedSelect.value);
    });

    fullscreenBtn.addEventListener('click', () => {
      if (!document.fullscreenElement) {
        video.requestFullscreen();
      } else {
        document.exitFullscreen();
      }
    });

    video.addEventListener('loadedmetadata', () => {
      durationElem.textContent = formatTime(video.duration);
      updateProgress();
    });
  </script>
</body>
</html>
